/* This implementation is very messy due to the overlayers plus the opacity fadein. We should consider combine the overlayers into one color(rgba) and combine the opacity classes. - Bill*/

.container{
  display: flex;
  flex-wrap: wrap;
  padding: 0 2vw;
  justify-content: space-evenly;
  flex-wrap: wrap;
}

.wrapper{
  position: relative;
  margin-bottom: 0.8em;
  overflow: hidden;
  cursor:pointer;
}

.img-click.wrapper.focused{
  outline: 5px solid black;
}

.wrapper::before{
  content: '';
  position:absolute;
  top:0;
  left:50%;
  transform:translateX(-50%);
  width:100%;
  height: 0;
  background: rgba(0, 0, 0, 0.7);
  transition: all 0.5s;
  z-index:1;
}

.wrapper.active::before, .wrapper.active::after{
  height: 10%;
}

.wrapper::after{
  content: '';
  position:absolute;
  bottom:0;
  left:50%;
  transform:translateX(-50%);
  width:100%;
  height: 0;
  background: rgba(0, 0, 0, 0.7);
  transition: all 0.5s;
}


.wrapper.col-1, .wrapper.col-2{
  width:500px;
  max-height:500px;
}


.wrapper.col-3{
  width: 30%;
  max-height: 500px;
}


.wrapper.col-5, .wrapper.col-6{
  width: 30%;
  max-height: 400px;
}

.wrapper.col-4{
  width: 20%;
  max-height: 500px;
}

.container img{
  width: 100%;
  object-fit: cover;
	display: block;
}

.col-1 img, .col-2 img, .col-3 img, .col-4 img{
  max-height: 500px;
}

.col-5 img, .col-6 img{
  max-height: 400px;
}

.black-overlay {
	transition: opacity 0.5s;
	opacity: 0;
	background: rgba(0, 0, 0, 0.3);
	height: 100%;
	width: 100%;
	position: absolute;
	top: 0;
}

.active .black-overlay {
	opacity: 1;
}

.container .wrapper .blue-overlay{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--primary);
  opacity: 0;
  transition: opacity 0.5s;
}

.container .wrapper .content{
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%);
  color: white;
  width: 100%;
  height: 80%;
  padding: 1vh 0;
  opacity: 0;
}

.wrapper.active .content{
  opacity: 1;
}

.wrapper.active .blue-overlay {
	opacity: 0.2;
}

.container .wrapper .content *{
  color: white;
}

.content>p {
	opacity: 0;
	transition: opacity 0.5s;
}

.active .content>p {
	opacity: 1;
}


@media only screen and (max-width: 1194px){

	.wrapper.col-2{
		width:48%;
	}
}

@media only screen and (max-width: 1024px) {
	.wrapper.col-3 {
		width:100%;
		max-width: 400px;
	}
	
	.wrapper.col-4 {
		width:48%;
		max-width: 400px;
	}
	
	.container.col-3 {
		flex-direction: column;
		align-items: center;
	}
	
}


@media (max-width: 834px) and (orientation: portrait){
  .wrapper.col-4{
    max-height: 400px;
  }
}

@media only screen and (max-width: 765px) and (orientation: portrait){
  .wrapper.col-4{
    max-height: 380px;
  }
}

@media only screen and (max-width: 542px){
  .wrapper.col-1{
    width: 96%;
    max-height: 400px;
  }
}

@media only screen and (max-width: 480px){ 
	.wrapper {
		width:100%!important;
		max-width: 300px!important;
	}
	.container {
		flex-direction: column;
		align-items: center;
	}
}